{"version":3,"sources":["./src/app/impressum/impressum.component.ts","./src/app/impressum/impressum.component.html","./src/app/labor/labor.component.ts","./src/app/labor/labor.component.html","./src/app/tests/tests.component.ts","./src/app/tests/tests.component.html","./src/app/dokumentation/dokumentation.component.ts","./src/app/dokumentation/dokumentation.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/software/software.component.ts","./src/app/software/software.component.html","./src/app/app.module.ts","./src/app/weiterbildung/weiterbildung.component.ts","./src/app/weiterbildung/weiterbildung.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-impressum',\n  templateUrl: './impressum.component.html',\n  styleUrls: [\n    '../app.component.css'\n  ]\n})\nexport class ImpressumComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">     \n  \n  <div class=mainContent>\n    <h2>1. Impressum und rechtliche Hinweise</h2>  \n\n        <p>Michael Haidner</p>\n\n        <p>Kirchfeldstrasse 3a</p>\n\n        <p>82284 Grafrath</p>\n  \n      \n        <p>Umsatzsteuer ID: DE212299875</p>\n\n        <p>Kontakt: Email: redaktionADDhaidner.de</p>\n        \n       <p>\n        Alternative Streitbeilegung gemäß Art. 14 Abs.1 ODR-VO und § 36 VSBG:\n        \n        Die Europäische Kommission stellt eine Plattform zur Online Streitbeilegung (OS) bereit, die Sie unter dem Link\n        \n        ec.europa.eu/consumers/odr/\n        \n        finden.\n       </p> \n      \n    <h2>2. Datenschutz</h2>\n        <p>\n            Erhebung und Nutzung personenbezogener Daten\n        </p>      \n\n        <p>\n            Personenbezogene Daten werden nur erhoben, \n            wenn Sie uns diese im Rahmen Ihres Besuchs unseres Internetauftritts explizit und freiwillig mitteilen. \n            Ihre von Ihnen mitgeteilten Daten verwenden wir ohne Ihre gesonderte freiwillige Mitteilung lediglich \n            zur Erfüllung und Abwicklung Ihres Auftrags. Mit vollständiger Abwicklung des Vertrags und \n            vollständiger Kaufpreiszahlung werden Ihre Daten für die weitere Verwendung gesperrt und nach Ablauf \n            der steuer- und handelsrechtlichen Aufbewahrungsfristen gelöscht, sofern Sie nicht ausdrücklich \n            in die weitere Nutzung Ihrer Daten eingewilligt haben. Die einschlägigen datenschutzrechtlichen \n            Bestimmungen, insbesondere die Regelungen des Telemediengesetzes („TMG“), der Datenschutzgrundverordnung \n            (DS-GVO) und des Bundesdatenschutzgesetzes („BDSG“) werden von uns selbstverständlich beachtet.\n        </p>        \n       \n        <p>Datensicherheit</p>         \n        \n                \n        <p>\n            Wir sichern unsere Systeme durch technische und organisatorische Maßnahmen gegen Verlust, \n            Zerstörung, Zugriff, Veränderung oder Verbreitung Ihrer Daten durch unbefugte Personen. \n            Trotz regelmäßiger Kontrollen ist ein vollständiger Schutz gegen alle Gefahren jedoch nicht möglich.\n        </p> \n        \n       <p>\n        Nach dem Bundesdatenschutzgesetz haben Sie das Recht auf unentgeltliche Auskunft über die zu Ihrer Person \n        bei uns gespeicherten Daten sowie ggf. ein Recht auf Berichtigung, Sperrung oder Löschung dieser Daten. \n        Ebenso haben Sie im Bedarfsfall ein Beschwerderecht bei der zuständigen Aufsichtsbehörde, \n        dem Bayerischen Landesamt für Datenschutzaufsicht, Postfach 606, 91511 Ansbach.\n       </p>\n\n    \n       <p>\n           Wenn Sie Fragen haben oder Auskünfte, Berichtigungen, Sperrungen oder Löschung Ihrer Daten oder \n           Einwilligungen widerrufen möchten, wenden Sie sich bitte an:\n        </p>\n\n    \n \n    <p>  \n        Michael Haidner, Kirchfeldstrasse 3a, 82284 Grafrath, E-Mail: redaktionADDhaidner.de\n    </p>\n\n    </div>\n  </div>\n  \n  \n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-labor',\n  templateUrl: './labor.component.html',\n  styleUrls: [\n    '../app.component.css'\n  ]\n})\nexport class LaborComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">    \n     \n  \n      <h1>Elektronik-Labor</h1> \n  \n      <img src=\"assets/image/Elektronik-Labor.jpg\" alt=\"Haidner Elektronik-Labor\" height=\"163\" width=\"318\"  > \n      \n \n      \n  \n      <h3>Warum ein Test-Labor?</h3>\n  \n      <p>\n        In meinem Test-Labor kann ich Elektronik, Hard- und Software testen. \n      </p>\n      <p>\n        Mit Messtechnik überprüfe ich, ob eine Beschreibung oder ein Programm auch wirklich funktioniert.\n      </p>\n      <p>\n        Wenn ich zum Beispiel eine Beschreibung über das Ausgeben von Meldungen erstelle, dann macht es Sinn, eine konkrete Anlage aufzubauen und zu testen, \n        ob diese Meldungen auch tatsächlich auf einem Display ausgegeben werden.\n\n      </p>\n      \n  \n      \n      <h3>Beispiel OPC UA</h3>\n        <p>\n            Ich beschreibe zum Beispiel, wie mit einem OPC UA-Client (Software-Programm) \n            die Werte in einer SPS (zum Beispiel einer Siemens Simatic S7-1500) gesetzt und \n            anschließend an einem Ausgang ausgegeben werden.\n\n            Hierzu baue ich die Anlage auf, mit dem OPC UA-Client-Programm auf einem Windows-Rechner, dem SPS-Programm auf der S7-1500-Steuerung und einem Ausgabemodul.\n\n            Anschließend messe ich, welche Spannung tatsächlich ausgegeben wird.\n      </p>\n\n      <h3>Messtechnik</h3>\n      <p>\n        In meiner Ausbildung als Radio- und Fernsehtechniker (Informations-Elektroniker) habe ich gelernt, \n        elektronische Größen (zum Beispiel Spannungen, Ströme, Widerstandswerte) zu messen und Fehler zu finden.\n\n        Diese Fähigkeiten sind beim Programmieren und Dokumentieren sehr wichtig.\n      </p>\n\n      \n\n   \n\n</div>\n  \n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tests',\n  templateUrl: './tests.component.html',\n  styleUrls: [\n    '../app.component.css'\n  ]\n})\nexport class TestsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tests works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dokumentation',\n  templateUrl: './dokumentation.component.html',\n  styleUrls: [\n    '../app.component.css'\n  ]\n})\n\nexport class DokumentationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","  <div class=\"content\">   \n     \n  \n      <div class=mainContent>\n      <h1>Dokumentation von Software</h1> \n  \n      \n  \n      <h3>Beschreiben und Erklären</h3>\n  \n      <p>\n        Seit mehr als zehn Jahren schreibe ich leidenschaftlich die Dokumentation zu Software.\n\n        Mir macht es Spaß, Software zu erklären, Hintergründe aufzuzeigen und mit Grafiken die Zusammenhänge zu verdeutlichen.\n      </p>\n  \n      \n      <h3>Dokumentation ist kein Luxus</h3>\n        <p>\n            Software-Entwicklung ist nicht mit dem Erstellen und Testen der Programme getan: \n            Die Software muss auch dokumentiert sein, damit die Entwickler, die später den Code vor sich haben, damit auch etwas anfangen können. \n            Sonst wird sehr viel Zeit und damit Geld verschwendet.\n\n            Legen Sie Wert auf eine gute Dokumentation für Ihre Software. Gute Dokumentation ist kein Luxus. \n      </p>\n\n      <h3>Know-how</h3>\n      <p>\n        Gute Dokumentation erfordert Wissen und Know-how: Wer Zusammenhänge versteht, \n        der kann sie auch beschreiben. Wer Wissen mitbringt, der kann es auch weitergeben. \n        Deshalb investiere ich in Aus- und Weiterbildung.\n      </p>\n\n      <h3>Dokumentations-Projekte</h3>\n      \n       <h4>Werkzeug- und Formenbau</h4> \n        <p>\n            Entwicklung und Dokumentation von C#-Programmen im Bereich Werkzeug- und Formenbau \n            zur Ansteuerung von Robotern und Magazinen, Integration in eine Software zur \n            Produktionssteuerung (Multithreading Anwendung). \n        </p>\n        \n       <h4>OPC UA</h4> \n        \n        <p>\n            Dokumentaton für OPC UA,\n            insbesondere im Bereich Alarms & Conditions            \n        </p>\n         \n        \n        <h4>Remote-Zugriff</h4>        \n        <p>\n            Verfassen eines Konzepts für eine IT-Unternehmensarchitektur, in der Anwender einen sicheren Zugang zu Anwendungen \n            im Unternehmensnetzwerk erhalten.\n            Der Zugriff erfolgt mit Hilfe von Smart-Phones. \n        </p>\n        \n        <h4>SPS-Programm</h4>\n        \n       <p>\n        Entwicklung eines SPS-Programms mit dem TIA Portal in SCL (ST), \n        das über OPC UA Daten aus einer S7-1500-Steuerung liest.        \n        Dokumentation von Server- und Client-Schnittstellen für OPC UA.\n       </p>\n\n       <h4>Datenvolumen begrenzen</h4>\n \n       <p>\n        Dokumentation eines Programm zur Begrenzung des Datenvolumens, das Windows-Rechner senden dürfen.\n\n        Entwicklung von Test-Programmen (in C#) für dieses Programm.\n\n        Dokumentation der Systemarchitektur von MindSphere, einer cloudbasierten Plattform für Industrie 4.0-Anwendungen (Internet of Things).\n    </p>\n\n    <h4>TIA Portal</h4> \n    <p>  \n        Pflege der Dokumentation für das TIA Portal, eines Programms zum Konfigurieren und Programmieren von Siemens-Steuerungen (SPS, PLC).\n\n        Kontextsensitive Hilfe\n        \n        Umfangreiche Hilfe-Topics für das Informationssystem des TIA Portals (STEP 7 V14),\n        z.B. über PROFINET und Redundanzverfahren (MRP und MRPD, Ausfallsicherung im Maschinen- und Anlagenbau)\n        \n         \n    </p>\n  \n    <h4>Wechselrichter</h4>\n\n    <p>\n        Systembeschreibungen von Wechselrichtern für einen Zug.\n    </p>\n    <p>\n        Dokumentation der Schnittstellen zum Zug-Leitsystem, \n        der IP-Kommunikation, des CAN-Netzwerke, der Pulswechselrichter und der Steuerungselektronik\n    </p>\n        \n    <p>Wartungsanleitung, Erläuterungen zu den Stromlaufplänen, Sicherheitshinweise\n    </p>\n        \n\n    <p>  \n        Recherche der elektrischen Schnittstellen neuer Komponenten (z.B. zur Rauch- und Temperarturmessung)\n \n    </p>   \n\n    </div>  \n  \n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Haidner';\n}\n","<!-- main table which splits the screen into two parts-->\n<table style=\"width:100%\">\n<tr>\n<!-- Head -->\n  <td colspan=\"2\">\n    \n    <div class=\"header_logo\" >\n\n      <img\n        width=max\n        height=\"50\"\n        alt=\"Haidner Logo\"\n        src=\"assets/image/haidner_logo.jpg\"\n      />\n    </div>\n\n  </td>    \n\n</tr>\n\n<!-- Middle part-->\n<tr>\n\n  <!-- Navigation-->\n  <td>\n   \n    <div class=\"card-container\">\n      <div class=\"card card-small\">\n         <a routerLink=\"/software\">\n          <span>Software-Entwicklung</span>\n          </a>\n      </div>\n  \n      <div class=\"card card-small\" >\n        <a routerLink=\"/dokumentation\">\n        <span>Dokumentation</span>\n        </a>      \n      </div>\n  \n      <div class=\"card card-small\" >\n        <a routerLink=\"/labor\">\n           <span>Elektronik-Labor</span>\n        </a>\n      </div>\n  \n      <div class=\"card card-small\" >\n        <a routerLink=\"/tests\">\n          <span>Tests</span>\n        </a>\n      </div>\n  \n      <div class=\"card card-small\" >\n        <a routerLink=\"/weiterbildung\">\n          <span>Weiterbildung</span>\n        </a>      \n      </div>\n  \n      <div class=\"card card-small\">\n        <a routerLink=\"/impressum\">\n        <span>Impressum</span>\n      </a>\n      </div>\n  \n   \n  </div> \n  \n  </td>\n\n  <!-- Content-->\n  <td>\n    \n    <router-outlet></router-outlet>\n  \n  </td>\n  \n</tr>\n\n<tr>\n  <!-- Footer-->\n\n  <td colspan=\"2\">\n\n       &copy; Copyright: Michael Haidner - This website uses Angular\n    \n  </td>\n \n  \n</tr>\n\n\n</table>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-software',\n  templateUrl: './software.component.html',\n  styleUrls: [\n    '../app.component.css'\n  ]\n})\nexport class SoftwareComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","  <style>\n\n:host {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  font-size: 14px;\n  color: #333;\n  box-sizing: border-box;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 8px 0;\n}\n\np {\n  margin: 0;\n}\n\n.spacer {\n  flex: 1;\n}\n\n.toolbar {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  background-color: #1976d2;\n  color: white;\n  font-weight: 600;\n}\n\n\n.content {\n  margin-left: -60px;\n  width: 650px;  \n}\n\nsvg.material-icons {\n  height: 24px;\n  width: auto;\n}\n\nsvg.material-icons:not(:last-child) {\n  margin-right: 8px;\n}\n\n.card svg.material-icons path {\n  fill: #888;\n}\n\n.card-container {\n  margin-top: 16px;\n  float:left;\n}\n\n.card {\n  border-radius: 4px;\n  border: 1px solid #eee;\n  background-color: #fafafa;\n  height: 40px;\n  width: 200px;\n  margin: 0 8px 16px;\n  padding: 16px;    \n  flex-direction: row;\n  justify-content: left;\n  align-items: center;\n  transition: all 0.2s ease-in-out;\n  line-height: 24px;\n}\n\n.card-container .card:not(:last-child) {\n  margin-right: 0;\n}\n\n.card.card-small {\n  height: 16px;\n  width: 168px;\n}\n\n.card-container .card:not(.highlight-card) {\n  cursor: pointer;\n}\n\n.card-container .card:not(.highlight-card):hover {\n  transform: translateY(-3px);\n  box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\n}\n\n.card-container .card:not(.highlight-card):hover .material-icons path {\n  fill: rgb(105, 103, 103);\n}\n\n.card.highlight-card {\n  background-color: #1976d2;\n  color: white;\n  font-weight: 600;\n  border: none;\n  width: auto;\n  min-width: 30%;\n  position: relative;\n}\n\n.card.card.highlight-card span {\n  margin-left: 60px;\n}\n\nsvg#rocket {\n  width: 80px;\n  position: absolute;\n  left: -10px;\n  top: -24px;\n}\n\nsvg#rocket-smoke {\n  height: calc(100vh - 95px);\n  position: absolute;\n  top: 10px;\n  right: 180px;\n  z-index: -10;\n}\n\na,\na:visited,\na:hover {\n  color: #1976d2;\n  text-decoration: none;\n}\n\na:hover {\n  color: #125699;\n}\n\n\n.terminal::before {\n  content: \"\\2022 \\2022 \\2022\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 4px;\n  background: rgb(58, 58, 58);\n  color: #c2c3c4;\n  width: 100%;\n  font-size: 2rem;\n  line-height: 0;\n  padding: 14px 0;\n  text-indent: 4px;\n}\n\n.terminal pre {\n  font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\n  color: white;\n  padding: 0 1rem 1rem;\n  margin: 0;\n}\n\n.circle-link {\n  height: 40px;\n  width: 40px;\n  border-radius: 40px;\n  margin: 8px;\n  background-color: white;\n  border: 1px solid #eeeeee;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: 1s ease-out;\n}\n\n.circle-link:hover {\n  transform: translateY(-0.25rem);\n  box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n}\n\nfooter {\n  margin-top: 8px;\n  align-items: center;\n  line-height: 20px;\n}\n\nfooter a {\n  display: flex;\n  align-items: center;\n}\n\n.github-star-badge {\n  color: #24292e;\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  padding: 3px 10px;\n  border: 1px solid rgba(27,31,35,.2);\n  border-radius: 3px;\n  background-image: linear-gradient(-180deg,#fafbfc,#eff3f6 90%);\n  margin-left: 4px;\n  font-weight: 600;\n  font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;\n}\n\n.github-star-badge:hover {\n  background-image: linear-gradient(-180deg,#f0f3f6,#e6ebf1 90%);\n  border-color: rgba(27,31,35,.35);\n  background-position: -.5em;\n}\n\n.github-star-badge .material-icons {\n  height: 16px;\n  width: 16px;\n  margin-right: 4px;\n}\n\nsvg#clouds {\n  position: fixed;\n  bottom: -160px;\n  left: -230px;\n  z-index: -10;\n  width: 1920px;\n}\n\n\ntd {\n  vertical-align: top;\n}\n\n\n\n/* Responsive Styles */\n@media screen and (max-width: 650px) {\n\n  .card-container > *:not(.circle-link) ,\n  .terminal {\n    width: 100%;\n  }\n\n  .card:not(.highlight-card) {\n    height: 16px;\n    margin: 8px 0;\n  }\n\n  .card.highlight-card span {\n    margin-left: 72px;\n  }\n\n  svg#rocket-smoke {\n    right: 120px;\n    transform: rotate(-5deg);\n  }\n}\n\n@media screen and (max-width: 575px) {\n  svg#rocket-smoke {\n    display: none;\n    visibility: hidden;\n  }\n}\n\n.article {\n\n  width: 700px;;\n}\n\n\n  </style>\n  \n  \n  <div class=\"content\">   \n     \n  \n      <h1>Software-Entwicklung</h1>\n\n\n      <h3>Dienstleistung</h3>\n  \n      <article class=\"article\">\n\n        Software-Entwiclung als Dienstleistung.\n        \n        Greifen Sie auf externes Know-how zu, ohne sich langfristig zu binden.\n        \n        Ich arbeite als sellbständiger Dienstleister im Bereich Software-Entwicklung.\n  \n        Im Auftrag von Unternehnen schreibe, teste und dokumentiere ich Software-Programme.\n    \n        Dadurch entlaste ich die Software-Abteilung meiner Kunden.\n      </article>\n\n  \n      <img src=\"assets/image/XmlConverter.png\" alt=\"Source code XmlConverter\" height=\"284\" width=\"1056\"  > \n      <p>Das Bild oben zeigt einen Ausschnitt aus einem Programm, das ich entwickelt habe, \n        um aus einer sehr großen XML-Datei relevante Daten zu lesen und in eine CSV-Datei auszugeben.\n      Dieses C#-Programm habe ich in drei Versionen erstellt: als Kommandozeilen-Programm, als WPF-Programm und als Funktion, die eine ASP.Net-Website integriert wurde.</p>\n      <h3>Software</h3>\n     <p>Software hat mich immer begeistert: Programmierbare Steuerungen haben die Welt verändert, in einem Maße, wie das früher (mit festverdrahteter Logik) undenkbar war.\n  \n        Schon bei meiner Ausbildung als Radio- und Fernsehtechniker habe ich mich mit Programmen beschäftigt.\n    \n        Nach der Ausbildung habe ich bei einem großen Hersteller für Unterhaltungselektronik die Eingangs-Bausteine für die Signale der Fernsteuerung repariert. Diese Bausteine waren Computer in einem Fernsehgerät (Embedded Systeme). \n    \n         Seitdem habe ich mich stets mit Computer-Technik und Programmiersprachen beschäftigt, mit SCL (Strukturierter Text), Java, PHP, JavaScript, C# und ASP.NET.\n      </p>\n      <h3>OPC UA</h3>\n      <p>\n        Im Rahmen meiner Dokumentation für OPC UA habe ich zahlreiche Beispielprogramme erstellt für den Aufbau einer sicheren Verbindung zu einem OPC UA-Server, für das Abfragen von Werten und den Abbau der Verbindung zum OPC UA-Server.  Diese Beispielprogramme habe ich in der Programmiersprache SCL (Strukturierter Text) erstellt. Die Programme können direkt von SPS-Entwicklern übernommen werden.\n\n        Zudem habe ich einen OPC UA-Client geschrieben, in der Programmiersprache C# (Windows Forms -Anwendung). \n        \n        Microsoft Azure (Cloud)\n        Aktuell beschäftige ich mich sehr viel mit Cloud-Techniken, vor allem mit der Cloud von Microsoft (Azure), mit virtuellen Maschinen und Container-Techniken (Docker und Docker Swarm / Kubernetes).\n        \n        Ich finde es sehr spannend, wie mit Software (zum Beispiel PowerShell-Skripten) Hardware-Ressourcen (virtuelle Maschinen, virtuelle Netze, Speicher) in der Cloud bereitgestellt werden\n      </p>\n\n      <h3>Entwicklungs-Projekte</h3>\n\n      \n       <h4>Treiber-Programm für Roboter</h4> \n\n        <p>\n            Entwicklung, Test und Dokumentation eines C#-Programms, das von einem KUKA-Programm (Fleetmanager) einen mobilen Roboter (AGV) anfordert und diesen mobilen Roboter \n            in einer Fertigungszelle zum Bestücken und Entladen von Bearbeitungsmaschinen verwendet (Multithreading, Datenübertragung über TCP/IP-Socket, Zustandsmaschine) \n            Unit- und Integrationstests des Treiber-Programms.\n        </p>\n        \n       <h4>Ansteuerung eines Magazins von Kardex</h4> \n        \n        <p>Entwicklung, Test und Dokumentation eines C#-Programms, \n            das die Einlagerung und die Entnahme von Artikeln aus einem Kardex-Magazin steuert \n            (Multithreading, Datenübertragung über TCP/IP-Socket). Unit-Tests des Treiber-Programmms\n        </p>\n         \n        \n        <h4>Treiber-Programm für Fanuc-Roboter</h4>\n        \n        <p>Erweiterung, Test und Dokumentation eines C#-Programms um Funktionen, \n            die einen Fanuc-Roboter so ansteuern, dass er Fertigteile zu einer Maschine zum automatischen Vermessen \n            bringt und diese Teile dann wieder abholt.\n        </p>\n        \n         \n        \n        <h4>ASP.NET-Webapplikation</h4>\n        \n       <p>\n        Erweiterung einer ASP.NET-Webapplikation (MVC) um zusätzliche Views (Ansichten), \n        in denen Daten aus einer Datenbank angezeigt werden (Microsoft Entity Framework).\n       </p>\n\n       <h4>UaClient</h4>\n \n       <p>Erweiterung des Programms „UaClient“, eines Clients für den neuen Kommunikationsstandard OPC UA.\n\n        Ich habe das Programm selbst entwickelt und jetzt erweitert:\n        \n        Der UAClient kann nun auch Alarm-Meldungen eines OPC UA-Servers empfangen und quittieren.\n      </p>\n\n      <h4>XmlConverter</h4>\n\n \n      <p>  \n      Entwicklung des Programms „XmlConverter“.\n      \n      Das C#-Programm liest aus einer sogenannten OPC UA XML-Datei“ die Namen und Adressen von Knoten (Nodes) \n      und fügt sie in eine Excel-Tabelle ein.\n      \n      Zudem liest das Programm die Datentypen von Knoten.\n      \n      Die Datentypen können beliebig tief verschachtelt sein.\n      \n      In einer OPC UA XML-Datei ist der sogenannte Adressraum eines OPC UA-Servers beschrieben, \n      der sich zum Beispiel aus Knoten zusammensetzt, über die Daten aus Industriesteuerungen gelesen werden können.\n      \n      Der XmlConverter vereinfacht den Umgang mit OPC UA XML-Dateien, \n      indem er die wesentlichen Informationen für OPC UA-Clients zur Verfügung stellt.\n      \n      Der XmlConverter wird zum Beispiel von System-Integratoren verwendet, \n      die ein SCADA-System an eine Industriesteuerung anschließen wollen.\n      \n      Das Programm ist eine Microsoft WPF-Anwendung.Die Anwendung arbeitet mit merhreren Threads\n      und rekursiven Methoden.\n      \n      Ich habe den XmlConverter auch als ASP-NET-Webseite entwickelt.    \n      </p>\n    \n      <h4>Sender und Empfänger für eine Testumgebung</h4>\n\n      <p>\n        Entwicklung von zwei C#-Programmen:\n\n        ein Sender, der Daten in ein LAN (Ethernet) einspeist\n\n        und ein Empfänger, der die Daten entgegen nimmt.\n\n        Die beiden Programme dienen dazu, für den Test eines anderen Programms eine Testumgebung zu erzeugen.\n\n        Das zu testende Programm begrenzt den Datenstrom, der von einem Windows-Rechner ausgesendet werden darf.\n\n        Deshalb ist es erforderlich, eine Testumgebung aufzubauen, in der das zu testende Programm sinnvoll betrieben werden kann.\n     \n \n      </p>\n  \n  </div>","import { Component, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule, Routes} from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { DokumentationComponent } from './dokumentation/dokumentation.component';\nimport { HomeComponent } from './home/home.component';\nimport { SoftwareComponent } from './software/software.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ImpressumComponent } from './impressum/impressum.component';\nimport { TestsComponent } from './tests/tests.component';\nimport { WeiterbildungComponent } from './weiterbildung/weiterbildung.component';\nimport { LaborComponent } from './labor/labor.component';\n\nconst appPoutes: Routes = [\n  {path: 'software', component: SoftwareComponent},\n  {path: 'dokumentation', component: DokumentationComponent},\n  {path: 'weiterbildung', component: WeiterbildungComponent},\n  {path: 'tests', component: TestsComponent},\n  {path: 'labor', component: LaborComponent},\n  {path: 'impressum', component: ImpressumComponent},\n  {path: '', redirectTo: '/software', pathMatch: 'full'},\n  {path: '**', component: PageNotFoundComponent},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DokumentationComponent,\n    HomeComponent,\n    SoftwareComponent,\n    PageNotFoundComponent,\n    ImpressumComponent,\n    TestsComponent,\n    WeiterbildungComponent,\n    LaborComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appPoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-weiterbildung',\n  templateUrl: './weiterbildung.component.html',\n  styleUrls: ['./weiterbildung.component.css']\n})\nexport class WeiterbildungComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","  <div class=\"content\">  \n     \n  \n      <h1>Weiterbildung</h1> \n  \n      \n  \n      <h3>Angular</h3>\n  \n      <p>\n        Angular  und AngularJS sind JavaScript-Frameworks, die heute sehr oft eingesetzt werden.\n\n        Mit diesen Frameworks lassen sich leistungsfähige Single-Page-Webapplikationen realisieren.\n        \n        Das interessiert mich sehr: Deshalb habe ich unter anderem den folgenden Kurs besucht: \n      </p>\n            \n  \n      \n      <h3>Web API und Microservices</h3>\n        <p>\n            Wie lassen sich große Software-Projekte in eine Reihe kleiner, in sich abgeschlossener Microservices aufteilen?\n\n            Wie können die Schnittstellen (API) zu diesen Microservices realisiert werden?\n\n            Wie verwendet man ASP.NET von Microsoft, um ein Web API umzusetzten?\n\n            Diese Fragen beantwortete der Online-Kurs \"Build Web APIs using ASP.NET\", den ich besucht habe:\n      </p>\n\n      <h3>Robotertechnik</h3>\n      <p>\n        Robotik ist ein großes Theam heute. \n\n        Wie agiert ein Roboter mit seiner physikalischen Umwelt?\n\n        Wie könnnen physikalische Größen über Sensoren erfasst und als Eingangssignale an den Mikrocontrollers geleitet werden, der einen Roboter steuert?\n\n        Wie lassen sich aus den Ausgangssignale des Mikrocontrollers die Ströme und Spannungen für Aktoren erzeugen?\n\n        Solche Frage beantwortete der Online-Kurs \"Electronic Interfaces\", den ich absolviiert habe: \n      </p>\n\n      <h3>Die Programmiersprache C#</h3>\n      <p>\n        C# ist die Antwort von Microsoft auf Java, eine der erfolgreichsten Programmiersprachen.\n\n        Ich interessiere mich für C, C++ und C# und habe eine Reihe von Kursen besucht, \n        um meine Arbeit auf ein solides Fundament zu stellen:\n      </p>\n\n   \n\n  </div>\n  \n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: [\n    '../app.component.css'\n  ]\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}